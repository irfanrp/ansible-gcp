# =========================
# PART 1: GET JOIN COMMAND
# =========================

- hosts: master
  become: true
  gather_facts: false
  tasks:
    - name: Check if join command file exists
      stat:
        path: /tmp/kubeadm_join_cmd.sh
      register: join_cmd_file_stat

    - name: Fail if join command not found
      fail:
        msg: "Join command file not found on master! Please run master init playbook to generate it first."
      when: not join_cmd_file_stat.stat.exists

    - name: Read join command from master
      slurp:
        src: /tmp/kubeadm_join_cmd.sh
      register: join_file_content
      when: join_cmd_file_stat.stat.exists

    - name: Set join command fact
      set_fact:
        join_command_content: "{{ join_file_content.content | b64decode }}"
      when: join_cmd_file_stat.stat.exists


# =========================
# PART 2: JOIN WORKERS
# =========================

- hosts: workers
  become: true
  gather_facts: false
  tasks:
    - name: Check if kubelet already joined
      stat:
        path: /etc/kubernetes/kubelet.conf
      register: kubelet_conf_stat

    - name: Reset kubeadm only if not joined
      shell: kubeadm reset -f
      when: not kubelet_conf_stat.stat.exists
      ignore_errors: true

    - name: Write join command to worker only if not joined
      copy:
        content: "{{ hostvars['master-node']['join_command_content'] }}"
        dest: /tmp/kubeadm_join_cmd.sh
        mode: '0755'
      when: not kubelet_conf_stat.stat.exists

    - name: Run kubeadm join only if not joined
      command: sh /tmp/kubeadm_join_cmd.sh
      args:
        creates: /etc/kubernetes/kubelet.conf
      when: not kubelet_conf_stat.stat.exists